"use strict";angular.module("commonsCloudFormApp",["ngResource","ngRoute","ngSanitize","ngTouch","leaflet-directive","angularFileUpload","geolocation","monospaced.elastic","angularMoment"]).config(["$routeProvider","$locationProvider","$httpProvider",function(a,b){var c="/views/main.html";a.when("/form/:templateId",{templateUrl:c,controller:"FormCtrl",resolve:{template:["Template","$route",function(a,b){return a.GetTemplate(b.current.params.templateId)}],fields:["Field","$route",function(a,b){return a.GetPreparedFields(b.current.params.templateId)}]}}),b.html5Mode(!0).hashPrefix("!")}]),angular.module("commonsCloudFormApp").controller("FormCtrl",["$rootScope","$scope","$routeParams","$window","$timeout","$location","$http","template","fields","Feature","geolocation","leafletData","Site","$route","moment",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){var p;b.page={template:"/views/form.html"},b.geography={},b.template=h,b.template.fields=i,console.log("$scope.template",b.template),b.feature=new j,b.feature.status="crowd",b.files=[];new L.FeatureGroup;b.map={defaults:{scrollWheelZoom:!1,zoomControl:!1,maxZoom:19},layers:{baselayers:{basemap:{name:"Satellite Imagery",url:"https://{s}.tiles.mapbox.com/v3/"+m.settings.services.mapbox.satellite+"/{z}/{x}/{y}.png",type:"xyz",layerOptions:{attribution:'<a href="https://www.mapbox.com/about/maps/" target="_blank">&copy; Mapbox &copy; OpenStreetMap</a>'}}}},center:{lat:null!==b.feature.geometry&&void 0!==b.feature.geometry?b.feature.geometry.geometries[0].coordinates[1]:38.362,lng:null!==b.feature.geometry&&void 0!==b.feature.geometry?b.feature.geometry.geometries[0].coordinates[0]:-81.119,zoom:6},markers:{LandRiverSegment:{lat:null!==b.feature.geometry&&void 0!==b.feature.geometry?b.feature.geometry.geometries[0].coordinates[1]:38.362,lng:null!==b.feature.geometry&&void 0!==b.feature.geometry?b.feature.geometry.geometries[0].coordinates[0]:-81.119,focus:!1,draggable:!0,icon:{iconUrl:"//api.tiles.mapbox.com/v4/marker/pin-l+b1c11d.png?access_token="+m.settings.services.mapbox.access_token,iconRetinaUrl:"//api.tiles.mapbox.com/v4/marker/pin-l+b1c11d@2x.png?access_token="+m.settings.services.mapbox.access_token,iconSize:[38,90],iconAnchor:[18,44],popupAnchor:[0,0]}}}},l.getMap().then(function(a){new L.Control.Zoom({position:"bottomright"}).addTo(a),b.$on("leafletDirectiveMarker.dragend",function(c,d){b.feature.geometry={type:"GeometryCollection",geometries:[]},b.feature.geometry.geometries.push({type:"Point",coordinates:[d.leafletEvent.target._latlng.lng,d.leafletEvent.target._latlng.lat]});var e=d.leafletEvent.target._latlng;a.setView(e,a.getZoom())})}),b.data={process:function(){var a=new FormData;return angular.forEach(b.template.fields,function(c){if("relationship"===c.data_type){var d=c.relationship,e=void 0!==b.feature[c.relationship]&&null!==b.feature[c.relationship]?'[{"id":'+b.feature[c.relationship]+"}]":null;null!==e&&(console.log("relationship found",d,e),a.append(d,e))}else if("date"===c.data_type){var f=o(b.feature[c.name]),d=c.name,e=f.format("l");a.append(d,e)}else if("file"!==c.data_type){var d=c.name,e=void 0!==b.feature[c.name]&&null!==b.feature[c.name]?b.feature[c.name]:null;null!==e&&a.append(d,e)}}),a.append("geometry",JSON.stringify(b.feature.geometry)),console.log("$scope.feature.geometry",b.feature.geometry),angular.forEach(b.files,function(b){console.log("file.field",b.field),a.append(b.field,b.file)}),a},save:function(){var a=b.data.process();g.post("//api.commonscloud.org/v2/"+b.template.storage+".json",a,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).success(function(a){console.log("$scope.data.save::response",a),n.reload()}).error(function(a){console.error("$scope.data.save::error",a)})}},b.onFileRemove=function(a,c,d){b.files.splice(d,1)},b.onFileSelect=function(a,c){angular.forEach(a,function(a){if(window.FileReader&&a.type.indexOf("image")>-1){var d=new FileReader;d.readAsDataURL(a),d.onload=function(d){a.preview=d.target.result,b.files.push({field:c,file:a}),b.$apply()}}else b.files.push({field:c,file:a}),b.$apply()})},b.searchAddress=function(){e.cancel(p),p=e(function(){b.initGeocoder()},800)},b.initGeocoder=function(){var a=b.geography.address;if(a.length>=3){var c="//api.tiles.mapbox.com/v4/geocode/mapbox.places-v1/"+a+".json";g({method:"get",url:c,params:{callback:"JSON_CALLBACK",access_token:m.settings.services.mapbox.access_token}}).success(function(a){b.geocode_features=a.features}).error(function(a){console.log("ERROR: ",a)})}},b.selectCoordinate=function(a){b.map.markers.Parcel={lat:a.center[1],lng:a.center[0],focus:!1,draggable:!0,icon:{iconUrl:"//api.tiles.mapbox.com/v4/marker/pin-l+b1c11d.png?access_token="+m.settings.services.mapbox.access_token,iconRetinaUrl:"//api.tiles.mapbox.com/v4/marker/pin-l+b1c11d@2x.png?access_token="+m.settings.services.mapbox.access_token,iconSize:[38,90],iconAnchor:[18,44],popupAnchor:[0,0]}},b.map.center={lat:a.center[1],lng:a.center[0],zoom:18},b.geocode_features=[],b.geography.address=a.place_name,b.geography.coordinates=a.center,e(function(){l.getMap().then(function(a){a.invalidateSize()})},200)}}]),angular.module("commonsCloudFormApp").provider("Template",function(){this.$get=["$resource",function(a){var b=a("//api.commonscloud.org/v2/templates/:templateId.json",{},{activity:{method:"GET",url:"//api.commonscloud.org/v2/templates/:templateId/activity.json"},get:{method:"GET",url:"//api.commonscloud.org/v2/templates/:templateId.json"},query:{method:"GET",isArray:!0,url:"//api.commonscloud.org/v2/applications/:applicationId/templates.json",transformResponse:function(a){var b=angular.fromJson(a);return b.response.templates}},save:{method:"POST",url:"//api.commonscloud.org/v2/applications/:applicationId/templates.json"},update:{method:"PATCH"}});return b.GetTemplate=function(a){var c=b.get({templateId:a,updated:(new Date).getTime()}).$promise.then(function(a){return a.response});return c},b.GetTemplateList=function(a){var c=b.query({applicationId:a,updated:(new Date).getTime()}).$promise.then(function(a){return a});return c},b.GetActivities=function(a){var c=b.activity({templateId:a,updated:(new Date).getTime()}).$promise.then(function(a){return a.response.activities});return c},b}]}),angular.module("commonsCloudFormApp").provider("Feature",function(){this.$get=["$resource","Template","$rootScope",function(a,b,c){var d=a("//api.commonscloud.org/v2/:storage.json",{},{query:{method:"GET",isArray:!1,transformResponse:function(a){return angular.fromJson(a)}},postFiles:{method:"PATCH",url:"//api.commonscloud.org/v2/:storage/:featureId.json",transformRequest:angular.identity,headers:{"Content-Type":void 0}},get:{method:"GET",url:"//api.commonscloud.org/v2/:storage/:featureId.json"},update:{method:"PATCH",url:"//api.commonscloud.org/v2/:storage/:featureId.json"},"delete":{method:"DELETE",url:"//api.commonscloud.org/v2/:storage/:featureId.json"}});return d.GetPaginatedFeatures=function(a,b){var c=d.GetTemplate(a,b).then(function(a){return d.GetFeatures(a)});return c},d.GetSingleFeatures=function(a,b){var c=d.GetTemplateSingleFeature(a,b).then(function(a){return d.GetFeature(a)});return c},d.GetTemplate=function(a,c){var d=b.get({templateId:a,updated:(new Date).getTime()}).$promise.then(function(a){return{storage:a.response.storage,page:c}});return d},d.GetTemplateSingleFeature=function(a,c){var d=b.get({templateId:a,updated:(new Date).getTime()}).$promise.then(function(a){return{storage:a.response.storage,featureId:c}});return d},d.GetFeatures=function(a){var b=d.query({storage:a.storage,results_per_page:a.results_per_page,page:void 0===a.page||null===a.page?1:a.page,q:{order_by:[{field:"id",direction:"desc"}]},updated:(new Date).getTime()}).$promise.then(function(a){return a});return b},d.GetFeature=function(a){var b=d.get({storage:a.storage,featureId:a.featureId,updated:(new Date).getTime()}).$promise.then(function(a){return a.response},function(){c.alerts=[],c.alerts.push({type:"error",title:"Uh-oh!",details:"Mind trying that again? We couldn't find the Feature you were looking for."})});return b},d.CreateFeature=function(a){console.log(a);var b=d.save({storage:a.storage},a.data).$promise.then(function(a){var b=a.resource_id;return b},function(a){c.alerts=[],c.alerts.push({type:"error",title:"Uh-oh!",details:"Mind trying that again? We couldn't find the Feature you were looking for."}),console.error(a)});return b},d}]}),angular.module("commonsCloudFormApp").provider("Field",function(){this.$get=["$resource","Feature",function(a,b){var c=a("//api.commonscloud.org/v2/templates/:templateId/fields/:fieldId.json",{},{query:{method:"GET",isArray:!0,url:"//api.commonscloud.org/v2/templates/:templateId/fields.json",transformResponse:function(a){var b=angular.fromJson(a);return b.response.fields}},save:{method:"POST",url:"//api.commonscloud.org/v2/templates/:templateId/fields.json"},update:{method:"PATCH"},"delete":{method:"DELETE",url:"//api.commonscloud.org/v2/templates/:templateId/fields/:fieldId.json"}});return c.PrepareFields=function(a){var c=[];return angular.forEach(a,function(a){"list"===a.data_type?a.options=a.options.split(","):"relationship"===a.data_type&&(console.log("Found relationship for field",a),b.GetFeatures({storage:a.relationship,results_per_page:100}).then(function(b){a.options=b.response.features})),c.push(a)}),c},c.GetPreparedFields=function(a){var b=c.query({templateId:a,updated:(new Date).getTime()}).$promise.then(function(a){return c.PrepareFields(a)});return b},c.GetFields=function(a){var b=c.query({templateId:a,updated:(new Date).getTime()}).$promise.then(function(a){return a});return b},c.GetField=function(a,b){var d=c.get({templateId:a,fieldId:b,updated:(new Date).getTime()}).$promise.then(function(a){return a.response});return d},c}]}),angular.module("commonsCloudFormApp").provider("Attachment",function(){this.$get=["$resource",function(a){var b=a("//api.commonscloud.org/v2/:storage/:featureId/:attachmentStorage/:attachmentId.json",{},{"delete":{method:"DELETE"}});return b}]}),angular.module("commonsCloudFormApp").service("Site",function(){return{settings:{services:{mapbox:{access_token:"pk.eyJ1IjoiZGV2ZWxvcGVkc2ltcGxlIiwiYSI6IlZGVXhnM3MifQ.Q4wmA49ggy9i1rLr8-Mc-w",satellite:"developedsimple.k105bd34",terrain:"developedsimple.k1054a50",street:"developedsimple.k1057ndn"}},links:[{rel:"canonical",href:"http://www.nfwf-ma.org/"}],meta:[{name:"viewport",content:"width=device-width, initial-scale=1.0"},{name:"og:locale",content:"en_US"},{name:"og:type",content:"website"},{name:"og:site_name",content:"NFWF Monitoring and Assessment"},{name:"keywords",content:""}],partners:[]}}});